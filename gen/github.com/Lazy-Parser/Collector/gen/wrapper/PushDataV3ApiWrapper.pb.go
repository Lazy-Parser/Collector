// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: PushDataV3ApiWrapper.proto

package wrapper

import (
	deals "github.com/Lazy-Parser/Collector/gen/deals"
	ticker "github.com/Lazy-Parser/Collector/gen/ticker"
	tickers "github.com/Lazy-Parser/Collector/gen/tickers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushDataV3ApiWrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// 频道
	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// *
	// 数据，NOTE：因为不能重复，所以类型和变量名尽量使用全名
	//
	// Types that are valid to be assigned to Body:
	//
	//	*PushDataV3ApiWrapper_PublicDeals
	//	*PushDataV3ApiWrapper_PublicMiniTicker
	//	*PushDataV3ApiWrapper_PublicMiniTickers
	Body isPushDataV3ApiWrapper_Body `protobuf_oneof:"body"`
	// *
	// 交易对
	Symbol *string `protobuf:"bytes,3,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	// *
	// 交易对ID
	SymbolId *string `protobuf:"bytes,4,opt,name=symbolId,proto3,oneof" json:"symbolId,omitempty"`
	// *
	// 消息生成时间
	CreateTime *int64 `protobuf:"varint,5,opt,name=createTime,proto3,oneof" json:"createTime,omitempty"`
	// *
	// 消息推送时间
	SendTime      *int64 `protobuf:"varint,6,opt,name=sendTime,proto3,oneof" json:"sendTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushDataV3ApiWrapper) Reset() {
	*x = PushDataV3ApiWrapper{}
	mi := &file_PushDataV3ApiWrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushDataV3ApiWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDataV3ApiWrapper) ProtoMessage() {}

func (x *PushDataV3ApiWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_PushDataV3ApiWrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDataV3ApiWrapper.ProtoReflect.Descriptor instead.
func (*PushDataV3ApiWrapper) Descriptor() ([]byte, []int) {
	return file_PushDataV3ApiWrapper_proto_rawDescGZIP(), []int{0}
}

func (x *PushDataV3ApiWrapper) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PushDataV3ApiWrapper) GetBody() isPushDataV3ApiWrapper_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicDeals() *deals.PublicDealsV3Api {
	if x != nil {
		if x, ok := x.Body.(*PushDataV3ApiWrapper_PublicDeals); ok {
			return x.PublicDeals
		}
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicMiniTicker() *ticker.PublicMiniTickerV3Api {
	if x != nil {
		if x, ok := x.Body.(*PushDataV3ApiWrapper_PublicMiniTicker); ok {
			return x.PublicMiniTicker
		}
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetPublicMiniTickers() *tickers.PublicMiniTickersV3Api {
	if x != nil {
		if x, ok := x.Body.(*PushDataV3ApiWrapper_PublicMiniTickers); ok {
			return x.PublicMiniTickers
		}
	}
	return nil
}

func (x *PushDataV3ApiWrapper) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *PushDataV3ApiWrapper) GetSymbolId() string {
	if x != nil && x.SymbolId != nil {
		return *x.SymbolId
	}
	return ""
}

func (x *PushDataV3ApiWrapper) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *PushDataV3ApiWrapper) GetSendTime() int64 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

type isPushDataV3ApiWrapper_Body interface {
	isPushDataV3ApiWrapper_Body()
}

type PushDataV3ApiWrapper_PublicDeals struct {
	PublicDeals *deals.PublicDealsV3Api `protobuf:"bytes,301,opt,name=publicDeals,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicMiniTicker struct {
	PublicMiniTicker *ticker.PublicMiniTickerV3Api `protobuf:"bytes,309,opt,name=publicMiniTicker,proto3,oneof"`
}

type PushDataV3ApiWrapper_PublicMiniTickers struct {
	PublicMiniTickers *tickers.PublicMiniTickersV3Api `protobuf:"bytes,310,opt,name=publicMiniTickers,proto3,oneof"`
}

func (*PushDataV3ApiWrapper_PublicDeals) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicMiniTicker) isPushDataV3ApiWrapper_Body() {}

func (*PushDataV3ApiWrapper_PublicMiniTickers) isPushDataV3ApiWrapper_Body() {}

var File_PushDataV3ApiWrapper_proto protoreflect.FileDescriptor

const file_PushDataV3ApiWrapper_proto_rawDesc = "" +
	"\n" +
	"\x1aPushDataV3ApiWrapper.proto\x1a\x16PublicDealsV3Api.proto\x1a\x1bPublicMiniTickerV3Api.proto\x1a\x1cPublicMiniTickersV3Api.proto\"\xb9\x03\n" +
	"\x14PushDataV3ApiWrapper\x12\x18\n" +
	"\achannel\x18\x01 \x01(\tR\achannel\x126\n" +
	"\vpublicDeals\x18\xad\x02 \x01(\v2\x11.PublicDealsV3ApiH\x00R\vpublicDeals\x12E\n" +
	"\x10publicMiniTicker\x18\xb5\x02 \x01(\v2\x16.PublicMiniTickerV3ApiH\x00R\x10publicMiniTicker\x12H\n" +
	"\x11publicMiniTickers\x18\xb6\x02 \x01(\v2\x17.PublicMiniTickersV3ApiH\x00R\x11publicMiniTickers\x12\x1b\n" +
	"\x06symbol\x18\x03 \x01(\tH\x01R\x06symbol\x88\x01\x01\x12\x1f\n" +
	"\bsymbolId\x18\x04 \x01(\tH\x02R\bsymbolId\x88\x01\x01\x12#\n" +
	"\n" +
	"createTime\x18\x05 \x01(\x03H\x03R\n" +
	"createTime\x88\x01\x01\x12\x1f\n" +
	"\bsendTime\x18\x06 \x01(\x03H\x04R\bsendTime\x88\x01\x01B\x06\n" +
	"\x04bodyB\t\n" +
	"\a_symbolB\v\n" +
	"\t_symbolIdB\r\n" +
	"\v_createTimeB\v\n" +
	"\t_sendTimeBk\n" +
	"\x1ccom.mxc.push.common.protobufB\x19PushDataV3ApiWrapperProtoH\x01P\x01Z,github.com/Lazy-Parser/Collector/gen/wrapperb\x06proto3"

var (
	file_PushDataV3ApiWrapper_proto_rawDescOnce sync.Once
	file_PushDataV3ApiWrapper_proto_rawDescData []byte
)

func file_PushDataV3ApiWrapper_proto_rawDescGZIP() []byte {
	file_PushDataV3ApiWrapper_proto_rawDescOnce.Do(func() {
		file_PushDataV3ApiWrapper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_PushDataV3ApiWrapper_proto_rawDesc), len(file_PushDataV3ApiWrapper_proto_rawDesc)))
	})
	return file_PushDataV3ApiWrapper_proto_rawDescData
}

var file_PushDataV3ApiWrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_PushDataV3ApiWrapper_proto_goTypes = []any{
	(*PushDataV3ApiWrapper)(nil),           // 0: PushDataV3ApiWrapper
	(*deals.PublicDealsV3Api)(nil),         // 1: PublicDealsV3Api
	(*ticker.PublicMiniTickerV3Api)(nil),   // 2: PublicMiniTickerV3Api
	(*tickers.PublicMiniTickersV3Api)(nil), // 3: PublicMiniTickersV3Api
}
var file_PushDataV3ApiWrapper_proto_depIdxs = []int32{
	1, // 0: PushDataV3ApiWrapper.publicDeals:type_name -> PublicDealsV3Api
	2, // 1: PushDataV3ApiWrapper.publicMiniTicker:type_name -> PublicMiniTickerV3Api
	3, // 2: PushDataV3ApiWrapper.publicMiniTickers:type_name -> PublicMiniTickersV3Api
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_PushDataV3ApiWrapper_proto_init() }
func file_PushDataV3ApiWrapper_proto_init() {
	if File_PushDataV3ApiWrapper_proto != nil {
		return
	}
	file_PushDataV3ApiWrapper_proto_msgTypes[0].OneofWrappers = []any{
		(*PushDataV3ApiWrapper_PublicDeals)(nil),
		(*PushDataV3ApiWrapper_PublicMiniTicker)(nil),
		(*PushDataV3ApiWrapper_PublicMiniTickers)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_PushDataV3ApiWrapper_proto_rawDesc), len(file_PushDataV3ApiWrapper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PushDataV3ApiWrapper_proto_goTypes,
		DependencyIndexes: file_PushDataV3ApiWrapper_proto_depIdxs,
		MessageInfos:      file_PushDataV3ApiWrapper_proto_msgTypes,
	}.Build()
	File_PushDataV3ApiWrapper_proto = out.File
	file_PushDataV3ApiWrapper_proto_goTypes = nil
	file_PushDataV3ApiWrapper_proto_depIdxs = nil
}
